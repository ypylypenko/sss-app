openapi: 3.0.3
info:
  title: Ticket Management API
  description: API for managing tickets.
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Local development server

paths:
  /tickets/open:
    get:
      summary: Get open tickets
      description: Returns a paginated list of unprocessed tickets.
      parameters:
        - name: page
          in: query
          required: false
          description: Page number for pagination.
          schema:
            type: integer
        - name: subject
          in: query
          required: false
          description: Subject string for filtering.
          schema:
            type: string
        - name: content
          in: query
          required: false
          description: Content string for filtering.
          schema:
            type: string
        - name: userId
          in: query
          required: false
          description: User id for filtering.
          schema:
            type: integer
      responses:
        200:
          description: Successful response with a list of open tickets.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ticket'
                  meta:
                    $ref: '#/components/schemas/Pagination'
  /tickets/closed:
    get:
      summary: Get closed tickets
      description: Returns a paginated list of processed tickets.
      parameters:
        - name: page
          in: query
          required: false
          description: Page number for pagination.
          schema:
            type: integer
        - name: subject
          in: query
          required: false
          description: Subject string for filtering.
          schema:
            type: string
        - name: content
          in: query
          required: false
          description: Content string for filtering.
          schema:
            type: string
        - name: userId
          in: query
          required: false
          description: User id for filtering.
          schema:
            type: integer
      responses:
        200:
          description: Successful response with a list of closed tickets.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ticket'
                  meta:
                    $ref: '#/components/schemas/Pagination'
  /users/{email}/tickets:
    get:
      summary: Get tickets by user
      description: Returns a paginated list of tickets for the user with the specified email.
      parameters:
        - name: email
          in: path
          required: true
          description: Email of the user.
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: Page number for pagination.
          schema:
            type: integer
      responses:
        200:
          description: Successful response with a list of tickets.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ticket'
                  meta:
                    $ref: '#/components/schemas/Pagination'
  /stats:
    get:
      summary: Get ticket statistics
      description: Returns ticket statistics, including top user and last processed ticket timestamp.
      responses:
        200:
          description: Successful response with ticket statistics.
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_tickets:
                    type: integer
                  unprocessed_tickets:
                    type: integer
                  top_user:
                    $ref: '#/components/schemas/User'
                  last_processed:
                    type: string
                    format: date-time

components:
  schemas:
    Ticket:
      type: object
      properties:
        id:
          type: integer
        subject:
          type: string
        content:
          type: string
        user:
          $ref: '#/components/schemas/User'
        status:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
    Pagination:
      type: object
      properties:
        current_page:
          type: integer
        last_page:
          type: integer
        per_page:
          type: integer
        total:
          type: integer
        links:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                nullable: true
              label:
                type: string
              active:
                type: boolean
